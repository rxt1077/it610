---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: db-primary-pv-claim
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 512M


---
apiVersion: v1
kind: Service
metadata:
  name: db-rw
  labels:
    app: db-rw
spec:
  selector:
    app: db-rw
  ports:
    - protocol: TCP
      port: 5432

---
apiVersion: v1
kind: Service
metadata:
  name: db-r
  labels:
    app: db-r
spec:
  selector:
    app: db-r
  ports:
    - protocol: TCP
      port: 5432

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: db-rw
  labels:
    app: db-rw
spec:
  replicas: 1
  selector:
    matchLabels:
      app: db-rw
  template:
    metadata:
      labels:
        app: db-rw
    spec:
      containers:
        - name: db-rw
          image: postgres:12.2
          env:
            - name: POSTGRES_PASSWORD
              value: "changeme"
            - name: POSTGRES_REPLICA_PASSWORD
              value: "changeme"
          command:
            - bash
            - "-c"
            - |
              set -ex

              if [ -s "/var/lib/postgresql/data/PG_VERSION" ]; then
                echo "Database already exists, not creating a new one."
              else
                rm -rf /var/lib/postgresql/data/*
                chown postgres /var/lib/postgresql/data

                su -c "initdb --username=postgres --pwfile=<(echo \"$POSTGRES_PASSWORD\")" postgres

                # Start a temporary server listening on localhost
                su -c "pg_ctl -D /var/lib/postgresql/data -w start" postgres

                # Create a user for replication operations and initialize our
                # example database
                psql -v ON_ERROR_STOP=1 --username postgres --dbname postgres <<EOF
                  CREATE USER repuser REPLICATION LOGIN ENCRYPTED PASSWORD '$POSTGRES_REPLICA_PASSWORD';
                  CREATE DATABASE example;
                  \c example
                  CREATE TABLE users(
                    email VARCHAR(255) PRIMARY KEY,
                    hash VARCHAR(255) NOT NULL
                  );
              EOF
              # ^ this EOF has to be in line with the YAML scalar block

                # Stop the temporary server
                su -c "pg_ctl -D /var/lib/postgresql/data -m fast -w stop" postgres

                # Set up authentication parameters
                echo "host replication all all md5" >> /var/lib/postgresql/data/pg_hba.conf
                echo "host all all all md5" >> /var/lib/postgresql/data/pg_hba.conf
              fi

              # Now run the server
              su -c postgres postgres
          volumeMounts:
            - name: db-primary-storage
              mountPath: /var/lib/postgresql/data
      volumes:
        - name: db-primary-storage
          persistentVolumeClaim:
            claimName: db-primary-pv-claim

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: db-r
  labels:
    app: db-r
spec:
  replicas: 2
  selector:
    matchLabels:
      app: db-r
  template:
    metadata:
      labels:
        app: db-r
    spec:
      containers:
        - name: db-r
          image: postgres:12.2
          env:
            - name: POSTGRES_REPLICA_PASSWORD
              value: "changeme"
          command:
            - bash
            - "-c"
            - |
              set -ex

              # Set up our password in .pgpass so we can connect to replicate
              # without a prompt
              echo "db-rw:5432:replication:repuser:$POSTGRES_REPLICA_PASSWORD" >> /var/lib/postgresql/.pgpass
              chown postgres /var/lib/postgresql/.pgpass
              chmod 600 /var/lib/postgresql/.pgpass

              # we may start before their are WALs, so we need to make this directory
              mkdir -p /var/lib/postgresql/data/pg_wal
              chown postgres /var/lib/postgresql/data/pg_wal

              # Clone the database from db-rw
              rm -rf /var/lib/postgresql/data/*
              chown postgres /var/lib/postgresql/data
              chmod -R 700 /var/lib/postgresql/data
              su -c "pg_basebackup -h db-rw -D /var/lib/postgresql/data -U repuser -w -v -P -X stream" postgres

              # Add connection info 
              cat << EOF >> /var/lib/postgresql/data/postgresql.conf
                primary_conninfo = 'host=db-rw port=5432 user=repuser password=$POSTGRES_REPLICA_PASSWORD'
              EOF

              # Notify postgres that this is a standby server
              touch /var/lib/postgresql/data/standby.signal

              # Now run the server
              su -c postgres postgres
